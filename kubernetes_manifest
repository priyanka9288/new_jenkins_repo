---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: frontend
        image: ng_frontend
        ports:
        - containerPort: 3000
        env:
        - name: NEXT_PUBLIC_API_URL
          value: http://backend-service:3001
        readinessProbe:
          tcpSocket:
            port: 3000
          periodSeconds: 10
          failureThreshold: 5
        livenessProbe:
          tcpSocket:
            port: 3000
          periodSeconds: 10
          failureThreshold: 5

---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 3000
  selector:
    app: frontend

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: backend
        image: ng_backend
        ports:
        - containerPort: 3001
        env:
        - name: APP_PORT
          value: "3001"
        - name: JWT_SECRET
          value: jwt_secret
        - name: DB_USER
          value: postgres
        - name: DB_PASS
          value: "123456"
        - name: DB_HOST
          value: postgres-service
        - name: DB_PORT
          value: "5432"
        readinessProbe:
          tcpSocket:
            port: 3001
          periodSeconds: 10
          failureThreshold: 5
        livenessProbe:
          tcpSocket:
            port: 3001
          periodSeconds: 10
          failureThreshold: 5

---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
spec:
  ports:
  - port: 3001
    targetPort: 3001
  selector:
    app: backend

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:15.1
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_PASSWORD
          value: "123456"
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - pg_isready -d db_prod
          periodSeconds: 10
          failureThreshold: 5
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - pg_isready -d db_prod
          periodSeconds: 10
          failureThreshold: 5

---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
spec:
  ports:
  - port: 5432
    targetPort: 5432
  selector:
    app: postgres
